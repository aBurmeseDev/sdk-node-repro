name: Create CloudFormation Stack

on:
  workflow_dispatch:

jobs:

  create-stack:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['>=16.11.0', '18.20.5', '20.18.1', '<16.11.0']

    steps:
    - name: Print version details
      run: |
        echo "Ubuntu version:"
        lsb_release -a
        echo "-----------------"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}     

    - name: Print Node.js version
      run: node --version

    - name: Print npm version
      run: npm --version
      
    - name: Print AWS SDK version
      run: |
        npm install @aws-sdk/client-cloudformation
        node -e 'console.log(require("@aws-sdk/client-cloudformation/package.json").version)'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Create CloudFormation Stack
      run: |
        npm install @aws-sdk/client-cloudformation@3.724.0
        node -e 'require("@aws-sdk/client-cloudformation")'
        NODE_VERSION="${{ matrix.node-version }}"
        STACK_NAME="my-stack-node-$(echo "$NODE_VERSION" | sed 's/[^a-zA-Z0-9-]/-/g' | sed 's/^-//' | sed 's/-$//')"
        aws cloudformation create-stack \
          --stack-name "$STACK_NAME" \
          --template-body '{"Resources": {"MyBucket": {"Type": "AWS::S3::Bucket", "Properties": {"BucketName": "sdk-node-repro"}}}}' \
          --capabilities CAPABILITY_NAMED_IAM
      env:
        AWS_REGION: us-west-2